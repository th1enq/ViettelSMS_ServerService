// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/th1enq/ViettelSMS_ServerService/internal/app/router"
	"github.com/th1enq/ViettelSMS_ServerService/internal/configs"
	"github.com/th1enq/ViettelSMS_ServerService/internal/infrastucture/repository"
	"github.com/th1enq/ViettelSMS_ServerService/internal/usecases/server"
	"github.com/th1enq/ViettelSMS_ServerService/pkg/log"
	"github.com/th1enq/ViettelSMS_ServerService/pkg/postgres"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func InitApp(cfg *configs.Config, grpcServer *grpc.Server) (*App, error) {
	logger, err := log.LoadLogger(cfg)
	if err != nil {
		return nil, err
	}
	dbEngine, err := postgres.NewPostgresDB(cfg, logger)
	if err != nil {
		return nil, err
	}
	serverRepository := repository.NewServerRepository(dbEngine)
	useCase := server.NewService(serverRepository, logger)
	serverServiceServer := router.NewGRPCServerServer(grpcServer, useCase, logger)
	app := New(cfg, useCase, serverServiceServer)
	return app, nil
}
